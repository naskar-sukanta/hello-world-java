name: Production Deployment

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      deployment-dir:
        required: true
        type: string
      version:
        required: false
        type: string
        default: 'latest'

jobs:
  deploy-to-production:
    runs-on: [self-hosted, production]  # Use labels to target production servers
    strategy:
      matrix:
        server: [13.202.81.29, 13.200.138.241]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ./artifact

      - name: Create backup
        run: |
          mkdir -p ${{ inputs.deployment-dir }}/backups
          if [ -f "${{ inputs.deployment-dir }}/app.jar" ]; then
            backup_name="app.jar.backup.$(date +%Y%m%d_%H%M%S)"
            cp ${{ inputs.deployment-dir }}/app.jar ${{ inputs.deployment-dir }}/backups/$backup_name
            echo "Backup created: $backup_name"
          fi

      - name: Deploy new version
        run: |
          JAR_FILE=$(find ./artifact -name "*.jar" | head -n 1)
          echo "Deploying version ${{ inputs.version }} to production server: ${{ matrix.server }}"
          mv "$JAR_FILE" ${{ inputs.deployment-dir }}/app.jar

      - name: Verify deployment
        run: |
          echo "Production deployment verification:"
          ls -la ${{ inputs.deployment-dir }}/
          echo "File size: $(du -h ${{ inputs.deployment-dir }}/app.jar | cut -f1)"

